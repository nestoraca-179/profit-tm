@{
    ViewData["TITLE"] = "Editar Usuario";
    ViewData["HOME"] = Session["HOME"];
}
<style>
    .form-group, .form-check {
        margin: 5px 0;
    }

    fieldset.form-group {
        margin: 10px 0;
    }

    .modal-info .fas {
        font-size: 6em;
        padding: 5%;
    }

    legend {
        font-size: 16px;
        font-weight: bold;
    }

    h5 {
        margin: 15px 0;
    }

    .col-sm-12 button {
        width: 100%;
        max-width: 600px;
        margin: 0 auto;
        display: block;
    }

    @@media (max-width: 575px) {
        .form-group.row label {
            margin: 0 0 5px 0;
        }

        legend {
            text-align: center;
            font-size: 20px !important;
        }
    }

    @@media (max-width: 767px) {
        .header-right-side {
            display: none;
        }

        .dash-left-side {
            width: 100%;
            height: auto;
            max-height: 100%;
            position: absolute;
            z-index: 10;
            border: 0 !important;
            overflow-y: auto;
        }

        .list-menu {
            margin: 0;
            display: none;
        }

        .menu-item {
            padding: 20px;
        }
    }
</style>
<div class="container-fluid p-0" ng-app="EditUser" ng-controller="controller">
    <div class="dash-container" id="dash-container">
        <div class="col-md-4 col-xl-3 col-xxl-2 dash-left-side border-right p-0" id="menu-left">
            <ul class="list-menu dropright">
                @{
                    foreach (var item in ViewBag.modules)
                    {
                        string disReport = item.ReportURL == "#" ? "disabled" : "";

                        <li class="menu-item" onclick="print(this)">
                            <i class="@item.Icon"></i>
                            <p class="mb-0 ml-3">@item.ModuleName</p>
                            <i class="fas fa-caret-up"></i>
                        </li>
                        <div class="my-dropdown">
                            @{
                                bool first_t = true;
                                foreach (var elem in item.Options)
                                {
                                    string type = elem.OptionType.Trim();
                                    if (type == "T")
                                    {
                                        if (first_t)
                                        {
                                            <p class="title-opt"><i class="fas fa-table"></i> Tablas</p>
                                            first_t = false;
                                        }

                                        string disabled = elem.Enabled ? "" : "disabled";
                                        <a class="dropdown-item @disabled" href="@elem.URL" onclick="$('#modalLoading').modal('show');"><i class="@elem.Icon"></i> @elem.OptionName</a>
                                    }
                                }
                            }
                            @{
                                bool first_p = true;
                                foreach (var elem in item.Options)
                                {
                                    string type = elem.OptionType.Trim();
                                    if (type == "P")
                                    {
                                        if (first_p)
                                        {
                                            <p class="title-opt"><i class="fas fa-sync"></i> Procesos</p>
                                            first_p = false;
                                        }

                                        string disabled = elem.Enabled ? "" : "disabled";
                                        <a class="dropdown-item @disabled" href="@elem.URL" onclick="$('#modalLoading').modal('show');"><i class="@elem.Icon"></i> @elem.OptionName</a>
                                    }
                                }
                            }
                            <p class="title-opt"><i class="fas fa-file"></i> Reportes</p>
                            <a class="dropdown-item @disReport" href="@item.ReportURL" onclick="$('#modalLoading').modal('show');"><i class="fas fa-file"></i>  Reportes</a>
                        </div>
                    }

                    if (ViewBag.user.Admin)
                    {
                        <li class="menu-item" onclick="print(this)">
                            <i class="fas fa-cog fa-spin"></i>
                            <p class="mb-0 ml-3">Configuración</p>
                            <i class="fas fa-caret-up"></i>
                        </li>
                        <div class="my-dropdown">
                            <a class="dropdown-item" href="/Usuarios/Index"><i class="fas fa-user"></i> Usuarios</a>
                            <a class="dropdown-item" href="/Conexiones/Index"><i class="fas fa-network-wired"></i> Conexiones</a>
                            <a class="dropdown-item" href="/Empresa/Index"><i class="fas fa-building"></i> Datos de Empresa</a>
                            <a class="dropdown-item" href="/Ventas/Procesos/LogsFacturas"><i class="fas fa-list"></i>Registro de Facturas</a>
                        </div>
                    }
                }
                <li class="menu-item border-top" onclick="location.href = '/Account/Logout'">
                    <i class="fas fa-power-off"></i>
                    <p class="mb-0 ml-3">Cerrar Sesión</p>
                </li>
            </ul>
        </div>
        <div class="col-md-8 col-xl-9 col-xxl-10 dash-right-side">
            <div class="container-fluid">
                <div class="row mt-4">
                    <div class="col"></div>
                    <div class="col">
                        <h2 class="text-center">Editar Usuario</h2>
                    </div>
                    <div class="col d-flex justify-content-center align-items-center">
                        <button type="submit" class="btn btn-primary" ng-click="sendUser()">Actualizar usuario</button>
                        <button type="button" class="btn btn-warning mx-2" ng-click="resetPass()">Resetear Clave</button>
                    </div>
                </div>
                <form action="" method="post" id="form" class="mt-5" onsubmit="return false;">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group row">
                                <label class="col-sm-4">Nombre</label>
                                <div class="col-sm-8">
                                    <input type="text" class="form-control" autocomplete="false" autofocus ng-model="user.Descrip" required />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4">Usuario</label>
                                <div class="col-sm-8">
                                    <input type="text" class="form-control" autocomplete="false" autofocus ng-model="user.Username" disabled />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4">Clave</label>
                                <div class="col-sm-8">
                                    <input type="password" class="form-control" autocomplete="false" ng-model="user.Password" disabled />
                                </div>
                            </div>
                            <div class="form-check row mt-4 p-0" style="display: flex;">
                                <label class="form-check-label col-sm-4 ml-3">
                                    <input class="form-check-input" type="checkbox" ng-model="user.UseBox" ng-change="reset(user.UseBox)" style="margin-left: 0;" />
                                    <span class="mx-2">Usa Caja</span>
                                </label>
                                <div class="col-sm-8">
                                    <select ng-model="user.BoxType" ng-change="setSups(user.BoxType)" ng-required="user.UseBox" ng-disabled="!user.UseBox" class="form-control" style="-webkit-appearance: button; -moz-appearance: button; box-shadow: none;">
                                        <option></option>
                                        <option value="1">Cajero</option>
                                        <option value="2">Supervisor</option>
                                        <option value="3">Gerente</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4">Superior de Caja</label>
                                <div class="col-sm-8">
                                    <select ng-model="user.SupID" ng-disabled="!user.UseBox || !user.BoxType || user.BoxType == 3 || !sups" ng-required="user.UseBox" class="form-control" style="-webkit-appearance: button; -moz-appearance: button; box-shadow: none;">
                                        <option></option>
                                        <option ng-repeat="sup in sups" ng-if="sup.ID != user.ID" value="{{ sup.ID }}">{{ sup.Descrip }}</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-check row mt-4">
                                <div class="col">
                                    <input class="form-check-input" type="checkbox" ng-model="user.UseAlterSerie">
                                    <label class="form-check-label ml-3">Usar Serie Alterna (Nro. Control)</label>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group row">
                                <label class="col-sm-4">Cédula</label>
                                <div class="col-sm-8">
                                    <input type="text" class="form-control" autocomplete="false" ng-model="user.CI" />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4">Email</label>
                                <div class="col-sm-8">
                                    <input type="email" class="form-control" autocomplete="false" ng-model="user.Email" required />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4">Teléfono</label>
                                <div class="col-sm-8">
                                    <input type="text" class="form-control" autocomplete="false" ng-model="user.Phone" />
                                </div>
                            </div>
                            <div class="form-check row mt-4">
                                <div class="col">
                                    <input class="form-check-input" type="checkbox" ng-model="user.Enabled">
                                    <label class="form-check-label ml-3">Activo</label>
                                </div>
                            </div>
                            <div class="form-check row mt-4">
                                <div class="col">
                                    <input class="form-check-input" type="checkbox" ng-model="user.AllowCollect">
                                    <label class="form-check-label ml-3">Permitir Cobrar Facturas</label>
                                </div>
                            </div>
                            <div class="form-check row mt-4">
                                <div class="col">
                                    <input class="form-check-input" type="checkbox" ng-model="user.AllowCancel">
                                    <label class="form-check-label ml-3">Permitir Anular Facturas</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-sm-6">
                            <fieldset class="form-group">
                                <div class="row">
                                    <legend class="col-sm-4 col-form-label pt-0">Acceso a aplicativos</legend>
                                    <div class="col-sm-8">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" ng-model="user.IsAdm">
                                            <label class="form-check-label">Administrativo</label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" ng-model="user.IsCon" ng-disabled="true">
                                            <label class="form-check-label">Contabilidad</label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" ng-model="user.IsNom" ng-disabled="true">
                                            <label class="form-check-label">Nómina</label>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                            <fieldset class="form-group">
                                <div class="row">
                                    <legend class="col-sm-4 col-form-label pt-0">Acceso a módulos</legend>
                                    <div class="col-sm-8">
                                        <p ng-if="!user.IsAdm && !user.IsCon && !user.IsNom">No has seleccionado ningún aplicativo</p>
                                        <div class="form-check" ng-repeat="mod in modules" ng-show="showMod(mod)">
                                            <h5 ng-if="modules[$index - 1].Product != modules[$index].Product" class="text-center font-weight-bold">{{ prods[mod.Product] }}</h5>
                                            <input class="form-check-input" type="checkbox" ng-click="checked($event.target.checked, mod, 'M')" ng-checked="verifyChecked(true, mod.ID)" ng-disabled="mod.Options.length == 0">
                                            <label class="form-check-label">{{ mod.ModuleName }}</label>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                        <div class="col-sm-6">
                            <fieldset class="form-group">
                                <div class="row">
                                    <legend class="col-sm-4 col-form-label pt-0">Acceso a opciones</legend>
                                    <div class="col-sm-8">
                                        <p ng-if="(!user.IsAdm && !user.IsCon && !user.IsNom) || modsChecked.length == 0">No has seleccionado ningún módulo</p>
                                        <div ng-repeat="mod in modsChecked | orderBy: 'Order'" ng-show="user.IsAdm || user.IsCon || user.IsNom">
                                            <h5 class="text-center font-weight-bold">{{ mod.ModuleName }}</h5>
                                            <div class="form-check" ng-repeat="opt in mod.Options">
                                                <input class="form-check-input" type="checkbox" ng-click="checked($event.target.checked, opt, 'O')" ng-checked="verifyChecked(false, opt.ID)">
                                                <label class="form-check-label">{{ opt.OptionName }}</label>
                                            </div>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" checked disabled />
                                                <label class="form-check-label">Reportes</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!-- Modal Waiting -->
    <div class="modal fade modal-info" id="modalWaiting" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document" style="max-width: 800px; margin: 0 auto;">
            <div class="modal-content">
                @*<div class="modal-header"></div>*@
                <div class="modal-body" style="max-height: 450px; overflow-y: auto; padding: 45px;">
                    <div style="display: flex; justify-content: center;">
                        <i class="fas fa-spinner fa-spin" style="color: #01579b;"></i>
                    </div>
                    <h2 class="text-center">Procesando...</h2>
                </div>
                @*<div class="modal-footer"></div>*@
            </div>
        </div>
    </div>
    <!-- Modal Success -->
    <div class="modal fade modal-info" id="modalSuccess" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document" style="max-width: 800px; margin: 0 auto;">
            <div class="modal-content">
                @*<div class="modal-header"></div>*@
                <div class="modal-body" style="max-height: 450px; overflow-y: auto; padding: 45px;">
                    <div style="display: flex; justify-content: center;">
                        <i class="fas fa-check-circle" style="color: var(--bs-green)"></i>
                    </div>
                    <h2 class="text-center">{{ successMessage }}</h2>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" ng-click="closeModal()" onclick="location.href = '/Usuarios/'">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal Error -->
    <div class="modal fade modal-info" id="modalError" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document" style="max-width: 800px; margin: 0 auto;">
            <div class="modal-content">
                @*<div class="modal-header"></div>*@
                <div class="modal-body" style="max-height: 450px; overflow-y: auto; padding: 45px;">
                    <div style="display: flex; justify-content: center;">
                        <i class="fas fa-exclamation-triangle" style="color: var(--bs-red)"></i>
                    </div>
                    <h2 class="text-center">Ha ocurrido un error</h2>
                    <p class="text-center">{{ errorMessage }}</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" ng-click="closeModal()">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal Loading -->
    <div class="modal fade modal-info" id="modalLoading" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document" style="max-width: 800px; margin: 0 auto;">
            <div class="modal-content">
                @*<div class="modal-header"></div>*@
                <div class="modal-body" style="max-height: 450px; overflow-y: auto; padding: 45px;">
                    <div style="display: flex; justify-content: center;">
                        <i class="fas fa-spinner fa-spin" style="color: #01579b; font-size: 7em;"></i>
                    </div>
                    <h1 class="text-center mt-5">Cargando módulo...</h1>
                </div>
                @*<div class="modal-footer"></div>*@
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/angular-min.js"></script>
<script>
    var app = angular.module("EditUser", []);
    var user = @Html.Raw(Json.Encode(ViewBag.user_edit));
    var sups = @Html.Raw(Json.Encode(ViewBag.sups));
    var modules = @Html.Raw(Json.Encode(ViewBag.all_mods));
    var btn = document.getElementById("icon-menu");
    var header = document.getElementById("header-left");
    var menu = document.getElementById("menu-left");
    var responsive = screen.availWidth <= 767 ? true : false;
    var node = null;

    app.controller("controller", function ($scope, $http) {

        if (user.BoxType != null) {
            user.BoxType = user.BoxType.toString();
        }

        if (user.SupID != null) {
            user.SupID = user.SupID.toString();
        }

        $scope.user = user;
        $scope.sups = sups;
        $scope.modules = modules;
        $scope.modsChecked = [];
        $scope.optsChecked = [];
        $scope.prods = {
            "ADM": "Administrativo",
            "CON": "Contabilidad",
            "NOM": "Nómina"
        };

        if (responsive) {
            btn.addEventListener("click", slide);
        } else {
            btn.addEventListener("click", hide);
            $(".menu-item.border-top").attr('style', 'display: none;');
        }

        for (var mod of user.UserModules) {
            var item = modules.find(m => m.ID == mod.ModuleID);
            $scope.modsChecked.push(item);

            for (var opt of item.Options) {
                var elem = user.UserOptions.find(o => o.OptionID == opt.ID);

                if (elem != null) {
                    $scope.optsChecked.push(opt);
                }
            }
        }

        window.addEventListener("resize", function () {
            responsive = screen.availWidth <= 767;

            if (responsive) {
                btn.removeEventListener("click", hide);
                btn.addEventListener("click", slide);
                $(".menu-item.border-top").removeAttr('style', 'display: none;');
                $("#header-left.active").removeClass("active");
                $("#menu-left.active").removeClass("active");
            } else {
                btn.removeEventListener("click", slide);
                btn.addEventListener("click", hide);
                $("ul.list-menu").removeAttr('style');
                $(".menu-item.border-top").attr('style', 'display: none;');
            }
        });

        $scope.showMod = function (mod) {

            switch (mod.Product) {
                case "ADM":
                    return $scope.user.IsAdm;
                case "CON":
                    return $scope.user.IsCon;
                case "NOM":
                    return $scope.user.IsNom;
            }
        }

        $scope.verifyChecked = function (flag, id) {

            var obj;

            if (flag)
                obj = $scope.user.UserModules.find(um => um.ModuleID == id);
            else
                obj = $scope.user.UserOptions.find(uo => uo.OptionID == id);

            if (obj != null)
                return true;
            else
                return false;
        }

        $scope.checked = function (value, item, type) {

            if (value) {
                if (type == 'M') {
                    $scope.modsChecked.push(item);
                } else if (type == 'O') {
                    $scope.optsChecked.push(item);
                }
            } else {
                if (type == 'M') {
                    var ind = $scope.modsChecked.indexOf(item);
                    $scope.modsChecked.splice(ind, 1);
                    $scope.optsChecked = $scope.optsChecked.filter(o => o.ModuleID != item.ID);
                } else if (type == 'O') {
                    var ind = $scope.optsChecked.indexOf(item);
                    $scope.optsChecked.splice(ind, 1);
                }
            }
        }

        $scope.reset = function (value) {
            if (!value) {
                $scope.user.BoxType = null;
                $scope.user.SupID = null;
            }
        }

        $scope.setSups = function (value) {
            if (value == "1") {
                $scope.sups = sups.filter(s => s.BoxType == 2);
            } else if (value == "2") {
                $scope.sups = sups.filter(s => s.BoxType == 3);
            } else if (value == "3") {
                $scope.sups = null;
                $scope.user.SupID = null;
            }
        }

        $scope.sendUser = function () {

            if ($("#form")[0].checkValidity()) {

                if (!$scope.user.IsAdm && !$scope.user.IsCon && !$scope.user.IsNom) {
                    alert("Debes seleccionar al menos uno de los aplicativos");
                } else {
                    if ($scope.modsChecked.length == 0) {
                        alert("Debes seleccionar al menos un módulo");
                    } else if ($scope.user.Password.length < 8) {
                        alert("La clave debe tener una longitud mínima de 8 caracteres");
                    } else {

                        $("#form input").change();
                        $("#modalWaiting").modal("show");

                        if ($scope.user.CI == "")
                            $scope.user.CI = null;
                        if ($scope.user.Phone == "")
                            $scope.user.Phone = null;

                        $scope.user.UserModules = $scope.modsChecked.map(function (m) {
                            var obj = {
                                UserID: $scope.user.ID,
                                ModuleID: m.ID
                            };

                            return obj;
                        });
                        $scope.user.UserOptions = $scope.optsChecked.map(function (o) {
                            var obj = {
                                UserID: $scope.user.ID,
                                OptionID: o.ID
                            };

                            return obj;
                        });

                        console.log($scope.user);

                        var req = {
                            method: 'POST',
                            url: '/api/ProfitTMApi/EditUser/',
                            data: $scope.user,
                            headers: {
                                'Content-Type': 'application/json'
                            },
                        }

                        $http(req).then(function (response) {

                            console.log(response.data);
                            var res = response.data;

                            if (res.Status == "OK") {
                                $("#modalSuccess").modal("show");
                                $scope.successMessage = "El usuario se ha modificado con éxito";
                            } else {
                                $("#modalError").modal("show");
                                $scope.errorMessage = res.Message;
                            }

                        });
                    }
                }
            }
        }

        $scope.resetPass = function () {

            $("#modalWaiting").modal("show");
            $http.get("/api/ProfitTMApi/ResetPass/" + user.ID.toString()).then(function (response) {

                var res = response.data;
                if (res.Status == "OK") {
                    $("#modalSuccess").modal("show");
                    $scope.successMessage = "La clave se ha reseteado con éxito";
                } else {
                    $("#modalError").modal("show");
                    $scope.errorMessage = res.Message;
                }

            });
        }

        $scope.closeModal = function () {
            $("#modalWaiting").modal("hide");
        }
    });

    function print(elem) {

        let item_active = $("#menu-left.active").length == 1;
        $(".my-dropdown").slideUp();

        if (node != null) {
            $(node).removeClass("selected");
            $(node).children("i.fa-caret-up").hide();
        }

        $(elem).addClass("selected");

        if (node != elem) {

            $(elem).next().slideDown();
            $(elem).next().css("display", "flex");
            $(elem).next().css("flex-direction", "column");
            $(elem).children("i.fa-caret-up").show();
            node = elem;

            if (item_active) {
                $("#header-left").removeClass("active");
                $("#menu-left").removeClass("active");
            }

        } else {

            $(elem).removeClass("selected");
            $(elem).children("i.fa-caret-up").hide();
            node = null;

        }
    }

    function hide() {

        if (node != null) {
            $(node).removeClass("selected");
            node = null;
        }

        header.classList.toggle("active");
        menu.classList.toggle("active");

        $(".my-dropdown").slideUp();
        $("i.fa-caret-up").hide();
    }

    function slide() {
        $(".list-menu").slideToggle()
    }

</script>