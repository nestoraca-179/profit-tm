@{
    ViewBag.Title = "Orden de Compra";
}
<style>
    input, select, textarea {
        border: solid 1px #d7d7d7;
        border-radius: 5px;
        box-shadow: none;
    }
    input[disabled] {
        pointer-events: none;
    }
    .container-orders {
        height: 100%;
        display: flex;
        flex-direction: column;
        padding: 15px;
        box-sizing: border-box;
    }
    .container-orders > .row {
        height: 100%;
        margin: 0;
        padding: 0;
    }
    .container-orders > .row hr {
        display: none;
    }
    .container-form .controls {
        margin: 0;
    }
    .col-sm-12.col-md-4.controls {
        width: auto;
    }
    .form-body .row {
        width: 100%;
        margin: 0;
        padding: 0;
    }
    .form-body .row .controls {
        margin: 0;
        padding: 0;
    }
    .cont-checks {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }
    .cont-checks .label-check {
        width: 140px;
    }
    .cont-radios {
        height: 100%;
        display: flex;
        justify-content: space-around;
        align-items: center;
    }
    .btn-convert {
        display: flex;
        justify-content: center;
        align-items: end;
    }
    .btn-convert button {
        width: 100%;
    }
    .bottom {
        margin-top: 15px;
    }
    .modal-info .fas {
        font-size: 6em;
        padding: 5%;
    }
    tr.active {
        background: #0277bd !important;
    }
    tr.active td {
        color: #FFF !important;
    }
    .field-active {
        background: #7af4af !important;
    }
    .d-flex.justify-content-evenly > button {
        width: 25px;
        height: 25px;
        padding: 0;
        font-size: 10px;
    }
    @@media (max-width: 767px) {
        .btn-convert {
            margin-top: 15px;
        }
    }
    @@media (max-width: 1199px) {
        .container-orders, .container-orders > .row {
            height: auto !important;
        }
        hr:not(.divider) {
            display: block !important;
        }
        .button-import .btn {
            margin: 2px;
        }
        .buttons-next-prev {
            justify-content: center !important;
            margin: 5px 0;
        }
        .button-import {
            flex-wrap: wrap;
            justify-content: center !important;
            margin: 5px 0;
        }
    }
</style>
<script src="~/Scripts/angular-min.js"></script>
<div class="container-fluid container-orders" id="container-orders" style="display: none;" ng-app="Orders" ng-controller="controller">
    <div class="row">
        <div class="col-md-12 col-xl-3 container-list">
            <input type="text" id="input-orders" class="form-control" placeholder="Buscar orden de compra..." style="border: solid 1px #ced4da;" onkeyup="searchOrder()" />
            <div class="list-table-orders">
                <table class="table table-hover table-striped" id="table-orders">
                    <thead>
                        <tr>
                            <th class="text-white">Código</th>
                            <th class="text-white">Cliente</th>
                        </tr>
                    </thead>
                    <tr ng-repeat="order in orders" ng-class="{ active: orders[index].doc_num == order.doc_num }" ng-click="selectOrder(order.doc_num)" style="cursor: pointer;">
                        <td><i class="fas fa-caret-right mx-1" ng-show="orders[index].doc_num == order.doc_num"></i>{{ order.doc_num }}</td>
                        <td>{{ order.co_prov }}</td>
                    </tr>
                </table>
            </div>
            @*<button type="button" class="btn btn-primary mt-2" ng-click="loadInvoices()">Cargar más facturas</button>*@
        </div>
        <hr class="divider" />
        <form action="" method="post" id="form" class="col-md-12 col-xl-9 container-form" onsubmit="return false;">
            <div class="form-header">
                <h3 class="text-center text-white"><i class="fas fa-file-alt"></i> Orden de Compra</h3>
            </div>
            <div class="form-buttons">
                <div class="row">
                    <div class="col buttons-next-prev" ng-show="!adding">
                        <button type="button" class="btn btn-primary" ng-click="margin('s')">
                            <i class="fas fa-chevron-double-left"></i>
                        </button>
                        <div style="width: 10px;"></div>
                        <button type="button" class="btn btn-primary" ng-click="prev()">
                            <i class="fas fa-chevron-left"></i>
                        </button>
                        <div style="width: 10px;"></div>
                        <button type="button" class="btn btn-primary" ng-click="next()">
                            <i class="fas fa-chevron-right"></i>
                        </button>
                        <div style="width: 10px;"></div>
                        <button type="button" class="btn btn-primary" ng-click="margin('e')">
                            <i class="fas fa-chevron-double-right"></i>
                        </button>
                    </div>
                </div>
            </div>
            <div class="form-tabs">
                <div class="row">
                    <button type="button" id="btn-general" class="col tablinks active" onclick="openTab(event, 'general')">General</button>
                    <button type="button" id="btn-adicionales" class="col tablinks" onclick="openTab(event, 'adicionales')">Adicionales</button>
                </div>
            </div>
            <div id="general" class="form-body" style="display: flex;">
                <p>general</p>
            </div>
            <div id="adicionales" class="form-body">
                <p>adicionales</p>
            </div>
        </form>
    </div>
</div>
<div class="panel-loading p-3">
    <h4>Cargando datos...</h4>
</div>
<script>
    var app = angular.module("Orders", []);
    var user = '@ViewBag.username';
    var orders = @Html.Raw(ViewBag.orders);

    orders = parseItems(orders);

    $(document).ready(function () {
        $(".container-orders").removeAttr("style");
        $(".panel-loading").css("display", "none");

        if (!responsive)
            $("#icon-menu").trigger("click");
    });

    $("#container-orders").on("click", function (event) {
        if (event.target.id != "icon-menu" && event.target.id != "menu-left" && !responsive) {
            if ($("#menu-left.active").length == 0) {
                $("#icon-menu").trigger("click");
            }
        }
    });

    $(document).on("contextmenu", function (event) {
        event.preventDefault();
    });

    app.controller("controller", function ($scope, $http) {

        $scope.index = 0;
        $scope.numberO = 200;
        $scope.orders = orders;
        $scope.order = orders[$scope.index];
        $scope.converted = false;

        // FUNCIONES DE BOTONES
        $scope.next = function () {
            if ($scope.index == (orders.length - 1)) {
                $scope.index = 0;
            } else {
                $scope.index++;
            }

            $scope.order = orders[$scope.index];
        }

        $scope.prev = function () {
            if ($scope.index == 0) {
                $scope.index = orders.length - 1;
            } else {
                $scope.index--;
            }

            $scope.order = orders[$scope.index];
        }

        $scope.margin = function (p) {
            if (p == "s") {
                $scope.index = 0;
                $scope.order = orders[0];
            } else if (p == "e") {
                $scope.index = orders.length - 1;
                $scope.order = orders[invoices.length - 1];
            }
        }

        $scope.convert = function () {
            $scope.converted = !$scope.converted;
        }

        // FUNCIONES DE ORDENES MOSTRADAS
        $scope.selectOrder = function (id) {
            if ($scope.new || $scope.adding) {
                alert("Debes terminar de agregar la orden");
            } else if ($scope.editing) {
                alert("Debes terminar de modificar la orden " + $scope.order.doc_num);
            } else {
                $scope.order = orders.find(o => o.doc_num == id);
                $scope.index = orders.indexOf($scope.order);
                $scope.orders = orders;
                $("#input-orders").val("");
                searchOrder();
            }
        }
    });

    // BUSQUEDAS
    function searchOrder() {
        var value = $("#input-orders").val().toLowerCase(),
            table = $("#table-orders")[0];

        for (var i = 1; i < table.rows.length; i++) {

            var row = table.rows[i];
            var elems = row.getElementsByTagName("td");

            var val1 = elems[0].innerHTML.toLocaleLowerCase(), val2 = elems[1].innerHTML.toLocaleLowerCase();

            if (!val1.includes(value) && !val2.includes(value))
                row.style.display = "none";
            else
                row.style.display = "";
        }
    }

    // FORMATO DE DATOS DE ORDENES DE COMPRA
    function parseItems(items_c) {

        var items = items_c;

        for (var item of items) {

            // TOTALES OM
            item.total_bruto_om = setSeparator((item.total_bruto / item.tasa).toFixed(2));
            item.total_bruto = setSeparator(item.total_bruto.toFixed(2));

            item.monto_imp_om = setSeparator((item.monto_imp / item.tasa).toFixed(2));
            item.monto_imp = setSeparator(item.monto_imp.toFixed(2));

            item.total_neto_om = setSeparator((item.total_neto / item.tasa).toFixed(2));
            item.total_neto = setSeparator(item.total_neto.toFixed(2));

            item.saldo_om = setSeparator((item.saldo / item.tasa).toFixed(2));
            item.saldo = setSeparator(item.saldo.toFixed(2));
            item.saldo_f_om = item.saldo_om;
            item.saldo_f = item.saldo;

            for (var r of item.saOrdenCompraReng) {
                r.monto_imp_om = setSeparator((r.monto_imp / item.tasa).toFixed(2));
                r.monto_imp = setSeparator(r.monto_imp.toFixed(2));

                r.reng_neto_om = setSeparator((r.reng_neto / item.tasa).toFixed(2));
                r.reng_neto = setSeparator(r.reng_neto.toFixed(2));
            }

            // FECHAS
            item.fec_emis = new Date(parseInt(item.fec_emis.substr(6)));
            item.fec_venc = new Date(parseInt(item.fec_venc.substr(6)));
            item.fec_reg = new Date(parseInt(item.fec_reg.substr(6)));
            item.fe_us_in = new Date(parseInt(item.fe_us_in.substr(6)));
            item.fe_us_mo = new Date(parseInt(item.fe_us_mo.substr(6)));

            // DATOS
            item.estatus = setStatus(item.status);
        }

        return items;
    }

    function setStatus(status) {

        var value;

        if (status == 0)
            value = "NO PROCESADA";
        else if (status == 1)
            value = "PARC. PROCESADA";
        else if (status == 2)
            value = "PROCESADA";

        return value;
    }

    // FORMATO Y CAMPOS
    function setSeparator(value) {
        return new Intl.NumberFormat('en-EN', { minimumFractionDigits: 2 }).format(value);
    }

    // PESTAÑAS
    function openTab(e, tabName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("form-body");

        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        tablinks = document.getElementsByClassName("tablinks");

        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        document.getElementById(tabName).style.display = "flex";
        e.target.className += " active";
    }

</script>