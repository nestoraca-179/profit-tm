@{
    ViewBag.Title = "Cajas";
}
<style>
    input, select, textarea {
        border: solid 1px #d7d7d7;
        border-radius: 5px;
        box-shadow: none;
    }
    input[type=text] {
        padding: 5px;
    }
    table thead {
        background: #0277bd;
        color: #FFF;
    }
    table td {
        vertical-align: middle;
    }
    table thead tr th {
        padding: 15px 5px !important;
    }
    table tbody tr td {
        font-size: 14px;
        user-select: none;
    }
    .status {
        padding: 5px;
        font-size: 12px;
        font-weight: bold;
        text-align: center;
        color: #FFF;
    }
    .buttons-actions {
        justify-content: space-around;
        font-size: 20px;
        color: #6c6c6c;
        cursor: pointer;
    }
    .buttons-actions i {
        width: 20px;
    }
    .modal:not(#modalLoading) .modal-dialog {
        min-width: 700px !important;
    }
    .controls {
        display: flex;
        align-items: center;
        margin: 10px 0;
    }
    .controls > * {
        width: 50%;
    }
    .modal-info .fas {
        font-size: 6em;
        padding: 5%;
    }
    #modal-eye {
        z-index: 2000;
        background: rgba(0, 0, 0, 0.8);
    }
    .container-card-boxes {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
    }
    .card-box {
        background: #e8e8eb;
        width: 250px;
        height: 200px;
        position: relative;
        cursor: pointer;
    }
    .card-box i.fa-desktop {
        width: 50px;
        height: 40px;
        margin: auto;
        font-size: 40px;
        text-align: center;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
    }
    .card-box > p.card-box-header {
        position: absolute;
        top: 10px;
        left: 10px;
        font-size: 14px;
    }
    .card-box > p.card-box-total {
        position: absolute;
        bottom: 10px;
        right: 10px;
        font-size: 14px;
        margin: 0;
    }
    .card-box-stats {
        display: flex;
        justify-content: space-between;
    }
    .card-box-stats p {
        margin: 0;
    }
    .card-box-dates {
        display: flex;
    }
    .card-box-dates > div {
        flex: 1;
        display: flex;
        justify-content: space-between;
    }
    .card-box-dates p {
        margin: 0;
    }
    .card-box-status {
        width: 100%;
        padding: 10px;
        display: flex;
        align-items: center;
        position: absolute;
        bottom: 0;
    }
    .card-box-status i {
        font-size: 10px;
    }
    .card-box-status p {
        margin: 0 10px;
        font-size: 14px;
    }
    .card-box-actions {
        display: flex;
        justify-content: space-between;
    }
    .card-box-actions button {
        height: 50px;
        display: flex;
        align-items: center;
        padding: 5px 10px;
        font-size: 14px;
    }
    .first {
        background: #FFC3AB;
    }
    .second {
        background: #ACDEAA;
    }
    .third {
        background: #ADD5FA;
    }
    #modal-income .controls > *, #modal-expense .controls > * {
        width: auto;
    }
    #modal-income .controls > label, #modal-expense .controls > label {
        width: 33.33%;
    }
    #modal-income .controls > input, #modal-income .controls > textarea, #modal-income .controls > .input-search, #modal-income .controls > select,
    #modal-expense .controls > input, #modal-expense .controls > textarea, #modal-expense .controls > .input-search, #modal-expense .controls > select {
        width: 66.66%;
    }
</style>
<script src="~/Scripts/angular-min.js"></script>
<div class="container-fluid container-boxes my-3" style="display: none;" ng-app="Boxes" ng-controller="controller">
    <div class="row m-3">
        <div class="col d-flex align-items-center">
            @{
                if (ViewBag.sucur == "002" && ViewBag.user.UseBox)
                {
                    <button class="btn btn-success d-flex align-items-center" ng-click="initBox()">
                        <i class="fas fa-plus"></i>
                        <p class="mx-2 my-0">Abrir nueva caja</p>
                    </button>
                }
            }
        </div>
        <div class="col">
            <h2 class="text-center">Control de Cajas</h2>
        </div>
        <div class="col"></div>
    </div>
    <hr />
    <div>
        <h5 class="my-3">Cajas abiertas</h5>
        <div class="container-card-boxes">
            <div ng-repeat="box in boxes | filter: { IsOpen: true } | orderBy:'-DateS'" ng-class="{ first: box.Level == 1, second: box.Level == 2, third: box.Level == 3 }" class="card-box shadow-tm my-2" ng-click="viewBoxDetails(box.ID)">
                <p class="card-box-header">{{ box.Descrip }} <br /> {{ formatDate(box.DateS).split(' ')[0] }} {{ formatDate(box.DateS).split(' ')[1] }}</p>
                <i class="fas fa-desktop"></i>
                <div ng-if="box.IsOpen" class="card-box-status">
                    <i class="fas fa-circle text-success"></i>
                    <p>Abierto</p>
                </div>
                <div ng-if="!box.IsOpen" class="card-box-status">
                    <i class="fas fa-circle text-danger"></i>
                    <p>Cerrado</p>
                </div>
                <p class="card-box-total">${{ (box.AmountInit + box.Incomes - box.Expenses + box.Sales).toFixed(2) }}</p>
            </div>
            <p ng-if="showNoItems(true)" class="w-100 my-0 text-center">No hay cajas abiertas</p>
        </div>
        <h5 class="my-3">Cajas cerradas</h5>
        <div class="container-card-boxes">
            <div ng-repeat="box in boxes | filter: { IsOpen: false } | orderBy:'-DateS'" ng-class="{ first: box.Level == 1, second: box.Level == 2, third: box.Level == 3 }" class="card-box shadow-tm my-2" ng-click="viewBoxDetails(box.ID)">
                <p class="card-box-header">{{ box.Descrip }} <br /> {{ formatDate(box.DateS).split(' ')[0] }}</p>
                <i class="fas fa-desktop"></i>
                <div ng-if="box.IsOpen" class="card-box-status">
                    <i class="fas fa-circle text-success"></i>
                    <p>Abierto</p>
                </div>
                <div ng-if="!box.IsOpen" class="card-box-status">
                    <i class="fas fa-circle text-danger"></i>
                    <p>Cerrado</p>
                </div>
                <p class="card-box-total">${{ (box.AmountInit + box.Incomes - box.Expenses + box.Sales).toFixed(2) }}</p>
            </div>
            <p ng-if="showNoItems(false)" class="w-100 my-0 text-center">No hay cajas cerradas</p>
        </div>
    </div>
    <!--
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Usuario</th>
                <th>Fecha Apertura</th>
                <th>Fecha Cierre</th>
                <th>Saldo Inicial</th>
                <th>Depósitos</th>
                <th>Retiros</th>
                <th>Ventas Contado</th>
                <th>Saldo en Caja</th>
                <th class="text-center">Estado</th>
                <th class="text-center">Acciones</th>
            </tr>
        </thead>
        <tbody>
            <tr ng-repeat="box in boxes | orderBy:'-DateS'">
                <td>{{ box.UserID }}</td>
                <td>{{ formatDate(box.DateS) }}</td>
                <td>{{ formatDate(box.DateE) }}</td>
                <td>{{ box.AmountInit.toFixed(2) }}</td>
                <td>{{ box.Incomes.toFixed(2) }}</td>
                <td>{{ box.Expenses.toFixed(2) }}</td>
                <td>{{ box.Sales.toFixed(2) }}</td>
                <td>{{ (box.AmountInit + box.Incomes - box.Expenses + box.Sales).toFixed(2) }}</td>
                <td ng-if="box.IsOpen">
                    <p class="status bg-success m-0">ABIERTO</p>
                </td>
                <td ng-if="!box.IsOpen">
                    <p class="status bg-danger m-0">CERRADO</p>
                </td>
                <td>
                    <div class="buttons-actions">
                        <i ng-show="box.IsOpen" class="fas fa-exchange" title="Generar Movimiento" data-toggle="modal" data-target="#modal-income" ng-click="setId(box.ID, box.AmountInit + box.Incomes - box.Expenses + box.Sales)"></i>
                        <i class="fas fa-eye mx-2" title="Ver Transacciones" ng-click="viewMovs(box.ID)"></i>
                        <i ng-show="box.IsOpen" class="fas fa-dollar-sign" title="Cerrar Caja" ng-click="openModalClose(box.ID)"></i>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
    -->
    <!-- Modal Nuevo -->
    <div class="modal fade" id="modal-new" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Abrir Caja</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="controls my-5">
                        <label>Monto</label>
                        <div style="position: relative;">
                            <input type="text" id="initAmount" class="w-100" ng-model="initAmount" onkeypress="return (event.charCode >= 46 && event.charCode <= 57)" />
                            <label class="text-danger text-center w-100" id="text-error" style="font-weight: bold; font-size: 15px; color: #ff1919; position: absolute; top: 40px; left: 0;"></label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-success" ng-click="addBox(initAmount)">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal Generar Mov. Caja -->
    <div class="modal fade" id="modal-income" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <form class="modal-dialog" id="form-income" role="document" onsubmit="return false;">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Generar Mov. Caja</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="controls">
                        <label>Tipo de Movimiento</label>
                        <select class="form-control" ng-model="move.tipo_mov" ng-change="changeSubMov(move.tipo_mov)" style="-webkit-appearance: button; -moz-appearance: button;">
                            <option value="I">Ingreso</option>
                            <option value="E">Egreso</option>
                        </select>
                    </div>
                    <div class="controls">
                        <label>Caja {{ sub_mov }}</label>
                        <div class="input-search">
                            <input type="text" class="form-control" id="account_i" ng-model="move.co_cta_ingr_egr" ng-required="true" style="flex: 1;" onkeydown="prevDel(event);" />
                            <input type="text" class="form-control" id="des_account_i" ng-readonly="true" style="flex: 2; margin-left: 5px;" />
                            <i class="fas fa-search" role="button" onclick="openModal(this, 'modalAccounts')" data-name="account_i"></i>
                        </div>
                    </div>
                    <div class="controls">
                        <label>Monto $USD</label>
                        <input type="text" required onkeypress="return (event.charCode >= 46 && event.charCode <= 57)" ng-model="move.monto_h" />
                    </div>
                    <div class="controls">
                        <label>Tasa</label>
                        <input type="text" onkeypress="return (event.charCode >= 46 && event.charCode <= 57)" ng-model="move.tasa" ng-required="true" />
                    </div>
                    <div class="controls">
                        <label>Comentario</label>
                        <textarea required style="font-size: 14px;" ng-model="move.descrip"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-success" ng-click="sendIncome()">Aceptar</button>
                </div>
            </div>
        </form>
    </div>
    <!-- Modal Generar Orden Pago -->
    <div class="modal fade" id="modal-expense" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <form class="modal-dialog" id="form-expense" role="document" onsubmit="return false;">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Generar Retiro</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="controls">
                        <label>Beneficiario</label>
                        <div class="input-search">
                            <input type="text" class="form-control" id="benef" ng-model="payOrder.cod_ben" ng-required="true" style="flex: 1;" onkeydown="prevDel(event);" />
                            <input type="text" class="form-control" id="des_benef" ng-readonly="true" style="flex: 2; margin-left: 5px;" />
                            <i class="fas fa-search" role="button" onclick="openModal(this, 'modalBenefs')" data-name="benef"></i>
                        </div>
                    </div>
                    <div class="controls">
                        <label>Cuenta Ingr/Egr</label>
                        <div class="input-search">
                            <input type="text" class="form-control" id="account_e" ng-model="payOrder.saOrdenPagoReng[0].co_cta_ingr_egr" ng-required="true" style="flex: 1;" onkeydown="prevDel(event);" />
                            <input type="text" class="form-control" id="des_account_e" ng-readonly="true" style="flex: 2; margin-left: 5px;" />
                            <i class="fas fa-search" role="button" onclick="openModal(this, 'modalAccounts')" data-name="account_e"></i>
                        </div>
                    </div>
                    <div class="controls">
                        <label>Monto $USD</label>
                        <input type="text" onkeypress="return (event.charCode >= 46 && event.charCode <= 57)" ng-model="payOrder.saOrdenPagoReng[0].monto_d" ng-required="true" />
                    </div>
                    <div class="controls">
                        <label>Tasa</label>
                        <input type="text" onkeypress="return (event.charCode >= 46 && event.charCode <= 57)" ng-model="payOrder.tasa" ng-required="true" />
                    </div>
                    <div class="controls">
                        <label>Comentario</label>
                        <textarea style="font-size: 14px;" ng-model="payOrder.descrip" ng-required="true"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-success" ng-click="sendExpense()">Aceptar</button>
                </div>
            </div>
        </form>
    </div>
    <!-- Modal Ver Transacciones -->
    <div class="modal fade" id="modal-eye" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Ver Transacciones</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <table ng-if="movs.length > 0" class="table table-striped">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Usuario</th>
                                <th>Tipo</th>
                                <th>Monto</th>
                                <th>Fecha</th>
                                <th>Comentario</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="m in movs" style="font-size: 14px;">
                                <td>{{ m.ID }}</td>
                                <td>{{ m.UserID }}</td>
                                <td ng-if="m.Type == 1" style="font-weight: bold;" class="text-success">INGRESO (+)</td>
                                <td ng-if="m.Type == 2" style="font-weight: bold;" class="text-danger">EGRESO (-)</td>
                                <td>{{ m.Amount.toFixed(2) }}</td>
                                <td>{{ formatDate(m.Date) }}</td>
                                <td>{{ m.Comment }}</td>
                            </tr>
                        </tbody>
                    </table>
                    <p ng-if="movs.length == 0" class="text-center">No hay transacciones</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal Cerrar Caja -->
    <div class="modal fade modal-info" id="modal-dollar-sign" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document" style="max-width: 800px; margin: 0 auto;">
            <div class="modal-content">
                @*<div class="modal-header"></div>*@
                <div class="modal-body">
                    <div style="display: flex; justify-content: center;">
                        <i class="fas fa-exclamation-triangle" style="color: var(--bs-yellow)"></i>
                    </div>
                    <h3 class="text-center">¿Desea cerrar caja?</h3>
                </div>
                <div class="modal-footer" style="justify-content: center">
                    <button type="button" style="width: 70px;" class="btn btn-danger" data-dismiss="modal">No</button>
                    <button type="button" style="width: 70px;" class="btn btn-success" ng-click="closeBox()">Sí</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal Detalles Caja -->
    <div class="modal fade" id="modalBoxDetails" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Caja #{{ box.ID }} - {{ box.Descrip }}</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card-box-dates">
                        <div>
                            <p><b>Fecha Apertura:</b></p>
                            <p>{{ formatDate(box.DateS) }}</p>
                        </div>
                        <div ng-if="box.DateE" style="padding-left: 10px;">
                            <p><b>Fecha Cierre:</b></p>
                            <p>{{ formatDate(box.DateE) }}</p>
                        </div>
                    </div>
                    <hr style="margin: 0.5rem 0;" />
                    <div class="card-box-stats">
                        <p>Saldo Inicial</p>
                        <p>${{ box.AmountInit.toFixed(2) }}</p>
                    </div>
                    <div class="card-box-stats">
                        <p>Depósitos</p>
                        <p>${{ box.Incomes.toFixed(2) }}</p>
                    </div>
                    <div class="card-box-stats">
                        <p>Retiros</p>
                        <p>${{ box.Expenses.toFixed(2) }}</p>
                    </div>
                    <div class="card-box-stats">
                        <p>Ventas Contado</p>
                        <p>${{ box.Sales.toFixed(2) }}</p>
                    </div>
                    <div class="card-box-stats">
                        <p>Saldo en Caja</p>
                        <p><b>${{ (box.AmountInit + box.Incomes - box.Expenses + box.Sales).toFixed(2) }}</b></p>
                    </div>
                    <hr />
                    <div class="card-box-actions">
                        <button ng-disabled="!box.IsOpen || (user.BoxType == 1 && box.UserID == user.Username)" class="btn btn-success" data-toggle="modal" data-target="#modal-income" ng-click="setId(box.ID, box.AmountInit + box.Incomes - box.Expenses + box.Sales)">
                            <i class="fas fa-exchange"></i>
                            <p class="mx-2 my-0">Generar Mov. Caja</p>
                        </button>
                        <button ng-disabled="!box.IsOpen || user.BoxType == 1 || (box.AmountInit + box.Incomes - box.Expenses + box.Sales).toFixed(2) <= 0" class="btn btn-danger" data-toggle="modal" data-target="#modal-expense" ng-click="setId(box.ID, box.AmountInit + box.Incomes - box.Expenses + box.Sales)">
                            <i class="fas fa-file-invoice"></i>
                            <p class="mx-2 my-0">Generar Ord. Pago</p>
                        </button>
                        <button class="btn btn-primary" ng-click="viewMovs(box.ID)">
                            <i class="fas fa-eye"></i>
                            <p class="mx-2 my-0">Ver Transacciones</p>
                        </button>
                        <button ng-disabled="!box.IsOpen || box.UserID == user.Username" class="btn btn-warning" data-dismiss="modal" ng-click="openModalClose(box.ID)">
                            <i class="fas fa-dollar-sign"></i>
                            <p class="mx-2 my-0">Cerrar Caja</p>
                        </button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal Warning -->
    <div class="modal fade modal-info" id="modalWarning" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document" style="max-width: 800px; margin: 0 auto;">
            <div class="modal-content">
                @*<div class="modal-header"></div>*@
                <div class="modal-body" style="max-height: 450px; overflow-y: auto; padding: 45px;">
                    <div style="display: flex; justify-content: center;">
                        <i class="fas fa-exclamation-triangle" style="color: var(--bs-yellow)"></i>
                    </div>
                    <h2 class="text-center">Ya tienes una caja abierta</h2>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal Waiting -->
    <div class="modal fade modal-info" id="modalWaiting" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false" style="background: rgba(0, 0, 0, .7);">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document" style="max-width: 800px; margin: 0 auto;">
            <div class="modal-content">
                @*<div class="modal-header"></div>*@
                <div class="modal-body" style="max-height: 450px; overflow-y: auto; padding: 45px;">
                    <div style="display: flex; justify-content: center;">
                        <i class="fas fa-spinner fa-spin" style="color: #01579b;"></i>
                    </div>
                    <h2 class="text-center">Procesando...</h2>
                </div>
                @*<div class="modal-footer"></div>*@
            </div>
        </div>
    </div>
    <!-- Modal Success -->
    <div class="modal fade modal-info" id="modalSuccess" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document" style="max-width: 800px; margin: 0 auto;">
            <div class="modal-content">
                @*<div class="modal-header"></div>*@
                <div class="modal-body" style="max-height: 450px; overflow-y: auto; padding: 45px;">
                    <div style="display: flex; justify-content: center;">
                        <i class="fas fa-check-circle" style="color: var(--bs-green)"></i>
                    </div>
                    <h2 class="text-center">{{ successMessage }}</h2>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="$('#modalWaiting').modal('hide');">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal Error -->
    <div class="modal fade modal-info" id="modalError" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document" style="max-width: 800px; margin: 0 auto;">
            <div class="modal-content">
                @*<div class="modal-header"></div>*@
                <div class="modal-body" style="max-height: 450px; overflow-y: auto; padding: 45px;">
                    <div style="display: flex; justify-content: center;">
                        <i class="fas fa-exclamation-triangle" style="color: var(--bs-red)"></i>
                    </div>
                    <h2 class="text-center">Ha ocurrido un error</h2>
                    <p class="text-center">{{ errorMessage }}</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="$('#modalWaiting').modal('hide');">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal 1 -->
    <div class="modal fade" id="modalBenefs" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" role="document" style="max-width: 800px;">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Buscar Beneficiario</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="max-height: 450px; overflow-y: auto">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Buscar beneficiario..." onkeyup="search('modalBenefs')" />
                    </div>
                    <table class="table table-bordered table-hover table-striped mt-3" id="results">
                        <tr ng-repeat="benef in benefs" style="cursor: pointer" onclick="selectRow(this)">
                            <td>{{ benef.cod_ben }}</td>
                            <td>{{ benef.ben_des }}</td>
                        </tr>
                    </table>
                    <input type="hidden" id="name-input" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="button" class="btn btn-primary" onclick="saveRow('modalBenefs')">Seleccionar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal 2 -->
    <div class="modal fade" id="modalAccounts" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" role="document" style="max-width: 800px;">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Buscar Cuenta de Ingr/Egr</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="max-height: 450px; overflow-y: auto">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Buscar cuenta..." onkeyup="search('modalAccounts')" />
                    </div>
                    <table class="table table-bordered table-hover table-striped mt-3" id="results">
                        <tr ng-repeat="account in accounts" style="cursor: pointer" onclick="selectRow(this)">
                            <td>{{ account.co_cta_ingr_egr }}</td>
                            <td>{{ account.descrip }}</td>
                        </tr>
                    </table>
                    <input type="hidden" id="name-input" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="button" class="btn btn-primary" onclick="saveRow('modalAccounts');">Seleccionar</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="panel-loading p-3">
    <h4>Cargando cajas...</h4>
</div>
<script>
    var app = angular.module("Boxes", []);
    var user = '@ViewBag.username';
    var benefs = @Html.Raw(ViewBag.benefs);
    var accounts = @Html.Raw(ViewBag.accounts);
    var options = { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' };
    var us = @Html.Raw(Json.Encode(ViewBag.user));

    app.controller("controller", function ($scope, $http) {

        $scope.initAmount = "0";
        $scope.boxId = "";
        $scope.totalBox = 0;
        $scope.benefs = benefs;
        $scope.accounts = accounts;
        $scope.boxes = [];
        $scope.user = us;
        $scope.move = {
            tipo_mov: "I",
            forma_pag: "EF",
            origen: "CAJ",
        };
        $scope.sub_mov = "origen";
        $scope.payOrder = {
            status: 'S',
            forma_pag: "EF",
            cod_caja: user.toUpperCase(),
            co_mone: "US$",
            saOrdenPagoReng: [{
                co_cta_ingr_egr: "",
                monto_d: "",
                tipo_imp: 7,
            }],
        };

        $http.get("/api/ProfitTMApi/GetBoxes/")
            .then(function (response) {

                var res = response.data;
                if (res.Status = "OK") {

                    if (us.BoxType == 1) {
                        $scope.boxes = res.Result.filter(b => b.UserID == us.Username);

                        for (var b of $scope.boxes) {
                            b.Level = 1;
                        }
                    } else if (us.BoxType == 2) {
                        $scope.boxes = res.Result.filter(b => b.UserID == us.Username || b.Sup == us.Username);

                        for (var b of $scope.boxes) {
                            if (b.UserID == us.Username) {
                                b.Level = 2;
                            } else if (b.Sup == us.Username) {
                                b.Level = 1;
                            }
                        }
                    } else if (us.BoxType == 3) {
                        var list = res.Result.filter(b => b.Sup == us.Username).map(b => b.UserID);
                        $scope.boxes = res.Result.filter(b => b.UserID == us.Username || b.Sup == us.Username);

                        for (var b of $scope.boxes) {
                            if (b.UserID == us.Username) {
                                b.Level = 3;
                            } else if (b.Sup == us.Username) {
                                b.Level = 2;
                            }
                        }

                        for (var id of list) {
                            for (var box of res.Result.filter(b => b.Sup == id)) {
                                box.Level = 1;
                                $scope.boxes.push(box);
                            }
                        }
                    }

                    $(".container-boxes").removeAttr("style");
                    $(".panel-loading").css("display", "none");

                } else {
                    alert("Ha ocurrido un error " + res.Message);
                }

            });

        $scope.initBox = function () {

            let box = $scope.boxes.find(b =>
                b.UserID == user &&                 // busca caja que sea del mismo usuario
                compareDate(b.DateS, Date.now()) && // busca caja que sea del dia actual
                b.IsOpen                            // busca caja que este abierta
            );

            if (box != null)
                $("#modalWarning").modal("show");
            else {
                setTimeout(() => $('#initAmount').focus(), 1000);
                $("#modal-new").modal("show");
            }
        }

        $scope.viewMovs = function (id) {
            $scope.movs = $scope.boxes.find(b => b.ID == id).BoxMoves;
            $("#modal-eye").modal("show");
        }

        $scope.setId = function (id, total) {
            $scope.boxId = id;
            $scope.totalBox = total;
            $("#modalBoxDetails").modal("hide");
        }

        $scope.addBox = function (amount) {

            $("#text-error").text("");

            if (amount == "") {
                $("#text-error").text("**DEBES INGRESAR UN SALDO INICIAL**");
            } else {

                $("#modal-new").modal("hide");
                $("#modalWaiting").modal("show");

                var box = {
                    UserID: user,
                    AmountInit: amount,
                    IsOpen: true
                };

                var req = {
                    method: 'POST',
                    url: '/api/ProfitTMApi/AddBox/',
                    data: box,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                }

                $http(req).then(function (response) {

                    var res = response.data;
                    if (res.Status == "OK") {

                        var new_box = res.Result;
                        $scope.boxes.push(new_box);

                        $("#modalSuccess").modal("show");
                        $scope.successMessage = "Caja agregada con éxito";

                    } else {
                        $("#modalError").modal("show");
                        $scope.errorMessage = res.Message;
                    }
                });

                $scope.initAmount = "0";
            }
        }

        $scope.formatDate = (date) => date != null ? new Date(date).toLocaleString("es-ES", options).replace(",", "") : "";

        $scope.openModalClose = function (id) {
            $scope.boxId = id;
            $("#modal-dollar-sign").modal("show");
        }

        $scope.closeBox = function () {
            $("#modal-dollar-sign").modal("hide");
            $("#modalWaiting").modal("show");

            $http.get("/api/ProfitTMApi/CloseBox/" + $scope.boxId)
                .then(function (response) {

                    var res = response.data;
                    if (res.Status == "OK") {

                        var box = $scope.boxes.find(b => b.ID == $scope.boxId);
                        box.DateE = new Date(Date.now());
                        box.IsOpen = false;

                        $("#modalSuccess").modal("show");
                        $scope.successMessage = "Caja cerrada con éxito";

                    } else {
                        $("#modalError").modal("show");
                        $scope.errorMessage = res.Message;
                    }

                });
        }

        $scope.viewBoxDetails = function (id) {
            $scope.box = $scope.boxes.find(b => b.ID == id);
            $("#modalBoxDetails").modal("show");
        }

        $scope.showNoItems = function (open) {
            if ($scope.boxes != null) {
                var boxes = $scope.boxes.filter(b => b.IsOpen == open);
                var count = boxes.length;

                return count == 0;
            }
        }

        $scope.changeSubMov = function (value) {
            if (value == "I") {
                $scope.sub_mov = "origen";
            } else if (value == "E") {
                $scope.sub_mov = "destino";
            }
        }

        $scope.sendIncome = function () {

            if ($("#form-income")[0].checkValidity()) {

                $("#form-income input").change();
                $("#modal-income").modal("hide");
                $("#modalWaiting").modal("show");

                var req = {
                    method: 'POST',
                    url: '/api/ProfitTMApi/AddMove/',
                    data: $scope.move,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                }

                var amount = parseFloat($scope.move.monto_h);
                var total = parseFloat($scope.totalBox);

                if ($scope.move.tipo_mov == "E" && amount > total) {
                    $("#modalError").modal("show");
                    $scope.errorMessage = `Debes ingresar un monto menor al saldo disponible en caja (${total.toFixed(2)})`;
                    return;
                }

                $http(req).then(function (response) {

                    var res = response.data;
                    if (res.Status == "OK") {
                        $("#modalSuccess").modal("show");
                        $scope.successMessage = `El depósito se ha agregado con éxito bajo el Movimiento de Caja N° ${res.Result.mov_num}`;

                        var move = {
                            ID: res.Result.campo2,
                            BoxID: res.Result.campo1,
                            UserID: user,
                            Amount: amount,
                            Type: 1,
                            Date: origDate(new Date(Date.now())),
                            Comment: res.Result.descrip
                        };

                        $scope.boxes.find(b => b.ID == parseInt(res.Result.campo1)).BoxMoves.push(move);
                        $scope.boxes.find(b => b.ID == parseInt(res.Result.campo1)).Incomes += move.Amount;

                        $("#des_account_i").val("");
                        $scope.move = {
                            tipo_mov: "I",
                            forma_pag: "EF",
                            origen: "CAJ",
                        };

                    } else {
                        $("#modalError").modal("show");
                        $scope.errorMessage = res.Message;
                    }
                });
            }
        }

        $scope.sendExpense = function () {

            if ($("#form-expense")[0].checkValidity()) {

                $("#form-expense input").change();
                $("#modal-expense").modal("hide");
                $("#modalWaiting").modal("show");

                var amount = parseFloat($scope.payOrder.saOrdenPagoReng[0].monto_d);
                var total = parseFloat($scope.totalBox);

                if (amount > total) {
                    $("#modalError").modal("show");
                    $scope.errorMessage = `Debes ingresar un monto menor al saldo disponible en caja (${total.toFixed(2)})`;
                    return;
                }

                var req = {
                    method: 'POST',
                    url: '/api/ProfitTMApi/AddPayOrder/',
                    data: $scope.payOrder,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                }

                $http(req).then(function (response) {

                    var res = response.data;
                    if (res.Status == "OK") {
                        $("#modalSuccess").modal("show");
                        $scope.successMessage = `El retiro se ha agregado con éxito bajo la Orden de Pago N° ${res.Result.ord_num}`;
                        
                        var move = {
                            ID: res.Result.campo2,
                            BoxID: res.Result.campo1,
                            UserID: user,
                            Amount: amount,
                            Type: 2,
                            Date: origDate(new Date(Date.now())),
                            Comment: res.Result.descrip
                        };

                        $scope.boxes.find(b => b.ID == parseInt(res.Result.campo1)).BoxMoves.push(move);
                        $scope.boxes.find(b => b.ID == parseInt(res.Result.campo1)).Expenses += move.Amount;

                        $("#des_benef").val("");
                        $("#des_account_e").val("");
                        $scope.payOrder = {
                            status: 'S',
                            forma_pag: "EF",
                            cod_caja: user.toUpperCase(),
                            co_mone: "US$",
                            saOrdenPagoReng: [{
                                co_cta_ingr_egr: "",
                                monto_d: "",
                                tipo_imp: 7,
                            }],
                        };

                    } else {
                        $("#modalError").modal("show");
                        $scope.errorMessage = res.Message;
                    }
                });
            }
        }
    });

    function origDate(value) {

        var timeOffset = value.getTimezoneOffset() * 60000;
        var date = new Date(value.getTime() - timeOffset).toUTCString();

        return new Date(date);
    }

    function prevDel(e) {
        e.preventDefault();
    }

    function searchBenef(value) {
        return benefs.find(c => c.cod_ben.trim() == value.trim()).ben_des;
    }

    function searchAccount(value) {
        return accounts.find(c => c.co_cta_ingr_egr.trim() == value.trim()).descrip;
    }

    function compareDate(d1, d2) {

        d1 = new Date(d1);
        d2 = new Date(d2);

        return d1.toLocaleDateString("en-US") == d2.toLocaleDateString("en-US");
    }

    function openModal(elem, modal) {

        var previous = elem.previousElementSibling;

        if (!previous.disabled) {

            $("#" + modal).find("#name-input").val($(elem).data("name"));
            $("#" + modal).modal("show");

        }
    }

    function search(modal) {
        var value = $("#" + modal).find("input[type=text]").val().toLowerCase(),
            table = $("#" + modal).find("#results")[0];

        for (var i = 0; i < table.rows.length; i++) {

            var row = table.rows[i];
            var elems = row.getElementsByTagName("td");

            var val1 = elems[0].innerHTML.toLocaleLowerCase(), val2 = elems[1].innerHTML.toLocaleLowerCase();

            if (!val1.includes(value) && !val2.includes(value))
                row.style.display = "none";
            else
                row.style.display = "";
        }
    }

    function selectRow(elem) {
        var previous = document.getElementsByClassName("selected-row")[0];

        if (previous != null) {
            previous.classList.remove("selected-row");
        }

        elem.classList.add("selected-row");
    }

    function saveRow(modal) {
        var item = document.getElementsByClassName("selected-row")[0];

        if (item != null) {
            var elem = item.children[0],
                value = elem.innerHTML,
                input = $("#" + modal).find("#name-input").val(),
                rows = [...($("#" + modal).find("#results")[0].rows)];

            $("#" + input).val(value.trim());
            $(".selected-row")[0].classList.remove("selected-row");
            $("#" + modal).find("input[type=text]").val("");
            $("#" + modal).find("button[name=search-btn]").trigger("click");

            if (input == "benef") {
                $("#des_benef").val(searchBenef(value));
            } else if (input == "account_i") {
                $("#des_account_i").val(searchAccount(value));
            } else if (input == "account_e") {
                $("#des_account_e").val(searchAccount(value));
            }

            rows.forEach(row => row.style.display = "");
            $("#" + modal).modal("hide");
        } else {
            alert("Debes seleccionar un item");
        }
    }

</script>