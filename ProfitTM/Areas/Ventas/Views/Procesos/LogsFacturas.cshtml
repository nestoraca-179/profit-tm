@{
    ViewData["TITLE"] = "Registro de Facturas";
    ViewData["HOME"] = Session["HOME"];
}
<style>
    table#table-logs {
        border-top: solid 10px transparent !important;
    }
    .table-info {
        overflow-x: auto;
    }
    table thead {
        background: #0277bd;
        color: #FFF;
    }
    table thead th {
        padding: 15px 5px !important;
    }
    table tbody td {
        font-size: 14px;
        user-select: none;
        vertical-align: middle !important;
    }
    table tbody, table tbody tr, table tbody td {
        border: 0;
        border-style: none;
    }
    .modal-info .fas {
        font-size: 6em;
        padding: 5%;
    }
    .btn.btn-success {
        color: #FFF;
    }
    .btn.btn-danger {
        background: #ff2e0c;
        border: solid 1px #ff2e0c;
    }
    .btn.btn-danger:hover{
        background: #d92204;
        border: solid 1px #d92204;
    }
    input[type=checkbox] {
        display: block;
        margin: 0 auto;
    }
    .cell-buttons {
        display: flex;
        justify-content: space-around;
        align-items: center;
    }
    .cell-buttons .btn {
        margin: 2px;
    }
    .modal-delete .fas {
        font-size: 6em;
        padding: 5%;
    }
    select[name="table-logs_length"] {
        background: #FFF !important;
        border: solid 1px #ced4da !important;
        box-shadow: none;
    }
    #table-logs_filter input {
        background: #FFF;
        border: solid 1px #ced4da;
        border-radius: 5px;
    }
    #table-logs_paginate {
        user-select: none;
    }
    #table-logs_paginate > a:not(.disabled) {
        background: #0d6efd;
        color: #FAFAFA !important;
        border-radius: 5px;
    }
    #table-logs_paginate > a:not(.disabled):hover {
        background: #0b5ed7;
    }
    #table-logs_paginate > span a.paginate_button:not(.disabled).current, #table-logs_paginate > span a.paginate_button:not(.disabled):hover {
        background: none;
        border: solid 2px #0d6efd;
        border-radius: 5px;
        color: #333 !important;
    }
    @@media (max-width: 767px) {
        .header-right-side {
            display: none;
        }
        .dash-left-side {
            width: 100%;
            height: auto;
            max-height: 100%;
            position: absolute;
            z-index: 10;
            border: 0 !important;
            overflow-y: auto;
        }
        .list-menu {
            margin: 0;
            display: none;
        }
        .menu-item {
            padding: 20px;
        }
        table {
            width: max-content !important;
        }
    }
</style>
<link href="https://cdn.datatables.net/v/dt/dt-1.13.4/datatables.min.css" rel="stylesheet" />
<script src="https://cdn.datatables.net/v/dt/dt-1.13.4/datatables.min.js"></script>
<div class="container-fluid container-logs py-3" id="container-logs" style="display: none;" ng-app="Logs" ng-controller="controller">
    <div class="row mt-3">
        <div class="col"></div>
        <div class="col">
            <h2 class="text-center">Registro de Facturas Online</h2>
        </div>
        <div class="col"></div>
    </div>
    <hr />
    <div class="table-info">
        <table class="table mt-3" id="table-logs">
            <thead>
                <tr>
                    <th>Nro. Doc.</th>
                    <th>Serie</th>
                    <th>Status</th>
                    <th>Cod. HTTP</th>
                    <th>Intentos</th>
                    <th>Nro. Control</th>
                    <th>Fec. Registro</th>
                    <th>Fec. Ult. Intento</th>
                    <th>Fec. Envio</th>
                    <th>Mensaje</th>
                    <th class="text-center">Opciones</th>
                </tr>
            </thead>
            <tbody>
                <tr ng-repeat="log in logs" class="{{ setClass(log.Status) }}">
                    <td>{{ log.NroFact }}</td>
                    <td>{{ log.Serie }}</td>
                    <td>{{ setStatus(log.Status) }}</td>
                    <td>{{ log.HttpCode }}</td>
                    <td>{{ log.Times }}</td>
                    <td>{{ log.NroControl }}</td>
                    <td>{{ log.DateInserted }}</td>
                    <td>{{ formatDate(log.DateTried) }}</td>
                    <td>{{ formatDate(log.DateSent) }}</td>
                    <td>{{ log.Message }}</td>
                    <td class="cell-buttons">
                        <button type="button" class="btn btn-primary" ng-click="infoLog(log)">
                            <i class="fas {{ setIcon(log.Status) }}"></i>
                        </button>
                        <button ng-disabled="log.Status != 1" type="button" class="btn btn-success" ng-click="askEmail(log)">
                            <i class="fas fa-paper-plane"></i>
                        </button>
                        <button ng-disabled="log.Status != 1" type="button" class="btn btn-danger" ng-click="downloadInvoice(log)">
                            <i class="fas fa-download"></i>
                        </button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <!-- Modal Enviar Correo -->
    <div class="modal fade" id="modalSendEmail" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false" style="z-index: 1051;">
        <div class="modal-dialog" role="document" style="max-width: 800px;">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Enviar Doc. {{ selected.NroFact }}</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar" onclick="$('#text-error-f').text('');">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="max-height: 450px; overflow-y: auto">
                    <div style="width: 100%; margin: 30px auto; display: flex; align-items: center; flex-direction: column;">
                        <label style="flex: 1; font-size: 25px; font-weight: bold;">Ingrese los correos destino</label>
                        <label style="flex: 1;">En caso de varios correos colocarlos separados por comas (máx. 5 correos)</label>
                        <div class="input-search mt-3" style="flex: 1; width: 80%; position: relative;">
                            <input type="text" class="form-control" id="emails" ng-model="emails" placeholder="alguien@example.com, someone@example.com ..." />
                            <label class="text-danger text-center w-100" id="text-error-f" style="font-weight: bold; font-size: 15px; color: #ff1919; position: absolute; top: 130%;"></label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="$('#text-error-f').text('');">Cerrar</button>
                    <button type="button" class="btn btn-primary" ng-click="sendInvoice(emails)">Enviar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal Waiting -->
    <div class="modal fade modal-info" id="modalWaiting" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document" style="max-width: 800px; margin: 0 auto;">
            <div class="modal-content">
                @*<div class="modal-header"></div>*@
                <div class="modal-body" style="max-height: 450px; overflow-y: auto; padding: 45px;">
                    <div style="display: flex; justify-content: center;">
                        <i class="fas fa-spinner fa-spin" style="color: #01579b;"></i>
                    </div>
                    <h2 class="text-center">Procesando...</h2>
                </div>
                @*<div class="modal-footer"></div>*@
            </div>
        </div>
    </div>
    <!-- Modal Success -->
    <div class="modal fade modal-info" id="modalSuccess" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document" style="max-width: 800px; margin: 0 auto;">
            <div class="modal-content">
                @*<div class="modal-header"></div>*@
                <div class="modal-body" style="max-height: 450px; overflow-y: auto; padding: 45px;">
                    <div style="display: flex; justify-content: center;">
                        <i class="fas fa-check-circle" style="color: var(--bs-green)"></i>
                    </div>
                    <h2 class="text-center">{{ successMessage }}</h2>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" ng-click="closeModal()">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal Error -->
    <div class="modal fade modal-info" id="modalError" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document" style="max-width: 800px; margin: 0 auto;">
            <div class="modal-content">
                @*<div class="modal-header"></div>*@
                <div class="modal-body" style="max-height: 450px; overflow-y: auto; padding: 45px;">
                    <div style="display: flex; justify-content: center;">
                        <i class="fas fa-exclamation-triangle" style="color: var(--bs-red)"></i>
                    </div>
                    <h2 class="text-center">Ha ocurrido un error</h2>
                    <p class="text-center">{{ errorMessage }}</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" ng-click="closeModal()">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal Loading -->
    <div class="modal fade modal-info" id="modalLoading" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document" style="max-width: 800px; margin: 0 auto;">
            <div class="modal-content">
                @*<div class="modal-header"></div>*@
                <div class="modal-body" style="max-height: 450px; overflow-y: auto; padding: 45px;">
                    <div style="display: flex; justify-content: center;">
                        <i class="fas fa-spinner fa-spin" style="color: #01579b; font-size: 7em;"></i>
                    </div>
                    <h1 class="text-center mt-5">Cargando módulo...</h1>
                </div>
                @*<div class="modal-footer"></div>*@
            </div>
        </div>
    </div>
</div>
<div class="panel-loading p-3">
    <h4>Cargando datos...</h4>
</div>
<script src="~/Scripts/angular-min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script>
    var app = angular.module("Logs", []);
    var logs = @Html.Raw(Json.Encode(ViewBag.logs));

    for (var item of logs) {
        //item.DateInserted = new Date(parseInt(item.DateInserted.substr(6)));
        item.DateTried = item.DateTried == null ? null : new Date(parseInt(item.DateTried.substr(6)));
        item.DateSent = item.DateSent == null ? null : new Date(parseInt(item.DateSent.substr(6)));
        item.correos = JSON.parse(item.BodyJson).documentoElectronico.encabezado.comprador.correo;
    }

    $(document).ready(function () {
        $(".container-logs").removeAttr("style");
        $(".panel-loading").css("display", "none");

        $('#table-logs').DataTable({
            "language": {
                "lengthMenu": "Mostrar _MENU_ registros por página",
                "info": "Página _PAGE_ de _PAGES_ - Mostrando _END_ de _TOTAL_ registros",
                "infoEmpty": "Mostrando _END_ de _TOTAL_ registros",
                "infoFiltered": "(filtrado de un total de _MAX_ registros)",
                "processing": "Procesando...",
                "search": "Buscar:   ",
                "zeroRecords": "No se encontraron resultados",
                "paginate": {
                    "first": "Primero",
                    "last": "Ultimo",
                    "next": "Siguiente",
                    "previous": "Anterior"
                },
            },
            "lengthMenu": [5, 10, 25, 50, 75, 100],
            "columnDefs": [{
                "targets": 6,
                "render": function (data, type, row) {
                    if (type === 'display' || type === 'filter') {
                        return moment(data).format('DD/MM/YYYY HH:mm:ss');
                    }
                    return data;
                }
            }],
            "order": [
                [6, 'desc'],
                [0, 'desc']
            ],
        });
    });

    $(document).on("contextmenu", function (event) {
        event.preventDefault();
    });

    app.controller("controller", function ($scope, $http) {

        $scope.logs = logs;
        $scope.emails = "";
        $scope.selected = null;

        $scope.formatDate = function (date) {

            if (date == null)
                return null;

            var day = date.getDate(), month = date.getMonth() + 1, year = date.getFullYear();
            var hour = date.getHours(), minute = date.getMinutes(), second = date.getSeconds();

            if (day < 10)
                day = "0" + day;

            if (month < 10)
                month = "0" + month;

            if (hour < 10)
                hour = "0" + hour;

            if (minute < 10)
                minute = "0" + minute;

            if (second < 10)
                second = "0" + second;

            return `${day}/${month}/${year} ${hour}:${minute}:${second}`;
        }

        $scope.setClass = function (status) {

            switch (status) {
                case 0:
                    return "table-secondary";
                case 1:
                    return "table-success";
                case 2:
                    return "table-danger";
                case 3:
                    return "table-warning";
            }
        }

        $scope.setIcon = function (s) {
            if (s == 1)
                return "fa-search";
            else
                return "fa-file-edit";
        }

        $scope.setStatus = function (s) {
            switch (s) {
                case 0:
                    return "NO ENVIADO";
                case 1:
                    return "ENVIADO";
                case 2:
                    return "ERROR";
                case 3:
                    return "EN ESPERA";
            }
        }

        $scope.infoLog = function (log) {
            location.href = "/Ventas/Procesos/InfoLog?l=" + log.NroFact;
        }

        $scope.origDate = (value) => origDate(value);

        $scope.askEmail = function (log) {
            $scope.selected = log;
            $scope.emails = log.correos != null ? log.correos.toString() : null;
            $("#modalSendEmail").modal("show");

            setTimeout(function () {
                $("#emails").focus();
            }, 500);
        }

        $scope.sendInvoice = function (value) {

            $('#text-error-f').text('');
            if (value != null && value != "") {
                
                var emails = value.split(",");
                for (var email of emails) {
                    if (!validateEmail(email.trim())) {
                        $('#text-error-f').text(`** EL VALOR ${email.trim()} NO ES UN CORREO VALIDO **`);
                        $("#emails").focus();
                        return;
                    }
                }

                if (emails.length > 5) {
                    $('#text-error-f').text('**DEBES INGRESAR UN MAXIMO DE 5 CORREOS**');
                    return;
                }

                $("#modalSendEmail").modal("hide");
                $("#modalWaiting").modal("show");

                var tipoDocumento = "01";
                var numeroDocumento = $scope.selected.NroFact;

                if (numeroDocumento.includes("N-")) {
                    tipoDocumento = "02";
                    numeroDocumento = numeroDocumento.replaceAll("N-", "");
                }

                var data = {
                    serie: $scope.selected.Serie.trim(),
                    tipoDocumento: tipoDocumento,
                    numeroDocumento: numeroDocumento,
                    correos: emails
                };

                var req = {
                    method: 'POST',
                    url: '/api/ProfitTMApi/SendInvoice/',
                    data: data,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                }

                $http(req).then(function (response) {

                    console.log(response.data);
                    var res = response.data;

                    if (res.Status == "OK") {
                        if (res.Result.codigo == "200") {
                            $("#modalSuccess").modal("show");
                            $scope.successMessage = "El documento " + $scope.selected.NroFact + " se ha enviado con éxito";
                        } else {
                            $("#modalError").modal("show");
                            $scope.errorMessage = res.Result.mensaje;
                        }
                    } else {
                        $("#modalError").modal("show");
                        $scope.errorMessage = res.Message;
                    }

                });

            } else {
                $('#text-error-f').text('**DEBES INGRESAR AL MENOS 1 CORREO**');
                $("#emails").focus();
            }
        }

        $scope.downloadInvoice = function (log) {

            $("#modalWaiting").modal("show");

            var tipoDocumento = "01";
            var numeroDocumento = log.NroFact;

            if (numeroDocumento.includes("N-")) {
                tipoDocumento = "02";
                numeroDocumento = numeroDocumento.replaceAll("N-", "");
            }

            var data = {
                serie: log.Serie.trim(),
                tipoDocumento: tipoDocumento,
                numeroDocumento: numeroDocumento,
                tipoArchivo: "pdf"
            };

            var req = {
                method: 'POST',
                url: '/api/ProfitTMApi/DownloadInvoice/',
                data: data,
                headers: {
                    'Content-Type': 'application/json'
                },
            }

            $http(req).then(function (response) {

                console.log(response.data);
                var res = response.data;

                if (res.Status == "OK") {
                    if (res.Result.codigo == "200") {
                        $("#modalSuccess").modal("show");
                        $scope.successMessage = "El documento se ha descargado con éxito";
                        convertBase64ToPdf(res.Result.archivo, log.NroFact);
                    } else {
                        $("#modalError").modal("show");
                        $scope.errorMessage = res.Result.mensaje;
                    }
                } else {
                    $("#modalError").modal("show");
                    $scope.errorMessage = res.Message;
                }

            });
        }

        $scope.closeModal = function () {
            $("#modalWaiting").modal("hide");
        }
    });

    function origDate(value) {

        var timeOffset = value.getTimezoneOffset() * 60000;
        var date = new Date(value.getTime() - timeOffset).toUTCString();

        return new Date(date);
    }

    function validateEmail(email) {
        const regex = /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
        return regex.test(email);
    }

    function convertBase64ToPdf(base64Pdf, fact) {
        // Convert the base64 encoded PDF file to a byte array
        var pdfBytes = atob(base64Pdf);
        var pdfArray = new Uint8Array(pdfBytes.length);

        // Fill the byte array with the bytes from the base64 encoded PDF file
        for (var i = 0; i < pdfBytes.length; i++) {
            pdfArray[i] = pdfBytes.charCodeAt(i);
        }

        // Create a Blob object from the byte array
        var pdfBlob = new Blob([pdfArray], { type: "application/pdf" });

        // Create a URL object from the Blob object
        var pdfUrl = URL.createObjectURL(pdfBlob);

        // Create an anchor element with the URL object as the href attribute
        var pdfLink = document.createElement("a");
        pdfLink.href = pdfUrl;
        pdfLink.download = `DOC_${fact}.pdf`;

        // Append the anchor element to the body of the document
        document.body.appendChild(pdfLink);

        // Trigger the download by clicking the anchor element
        pdfLink.click();

        // Remove the anchor element from the body of the document
        document.body.removeChild(pdfLink);
    }

</script>